[
  {
    "_id": 1,
    "projectName": "Basa Khuji.com",
    "liveLink": "https://basa-khuji-next-client.vercel.app/",
    "clientRepo": "https://github.com/shaikot07/BasaKhuji-next-client",
    "serverRepo": "https://github.com/shaikot07/Basakhuji-server",
    "projectImg": "https://res.cloudinary.com/dy0b6hvog/image/upload/v1747075652/basa-yy_hgvagk.png",
    "projectBanner": "https://res.cloudinary.com/dy0b6hvog/image/upload/v1747075652/basa-yy_hgvagk.png",
    "projectOverview": [
  "BashaKhuji.com is a complete, role-based rental housing platform connecting tenants and landlords efficiently and securely.",
  "Built with Next.js, TypeScript, Node.js, and MongoDB for scalability and performance.",
  "Tailored dashboards and features for three roles: Tenant, Landlord, and Admin.",
  "Landlords can easily post detailed property listings.",
  "Tenants can search rentals using smart filters (location, rent, number of bedrooms).",
  "Rental requests, approvals, and payments are managed in one unified system.",
  "Secure payment gateway (ShurjoPay) integrated for finalizing rentals.",
  "Email notifications keep users informed of real-time updates.",
  "Role-based authentication with JWT and bcrypt ensures secure access and password protection.",
  "Fully responsive UI optimized for mobile, tablet, and desktop.",
  "SEO-friendly and high-performance rendering using Next.js.",
  "RESTful APIs support scalability and future extensibility.",
  "Clean, modular codebase for reusability and maintainability.",
  "End-to-end solution with a strong focus on usability, security, and performance."
],
"futurePlans": [
  "Implement a wishlist feature for users to save favorite properties.",
  "Integrate real-time chat between tenants and landlords for better communication.",
  "Introduce map-based search with location pins and neighborhood insights.",
  "Add tenant and landlord review/rating systems for trust and transparency."
],
    "tools": [
      "Next.js",
     "TypeScript",
      "Node.js",
      "Express.js",
      "MongoDB",
      "Tailwind CSS",
      "shadcn/ui",
      "JWT (JSON Web Tokens)",
      "bcrypt (password hashing)",
      "ShurjoPay (Payment Gateway)",
      "Express.js",
      "Next.js",
      "HTML",
      "CSS"
    ]
  },
  {
    "_id": 2,
    "projectName": "Bike House",
    "liveLink": "https://bike-house-l2-as4.netlify.app/",
    "clientRepo": "https://github.com/shaikot07/bike-house-client",
    "serverRepo": "https://github.com/shaikot07/l-2-assignment-2-bike-store-server",
    "projectImg": "https://res.cloudinary.com/dy0b6hvog/image/upload/v1746030443/bike_house_i4agpb.png",
    "projectBanner": "https://res.cloudinary.com/dy0b6hvog/image/upload/v1746030443/bike_house_i4agpb.png",
    "projectOverview": [
  "Bike House is a comprehensive e-commerce web application for buying and selling bikes through a clean, responsive, and user-friendly interface.",
  "Built using the MERN stack: React with TypeScript on the frontend and Node.js with Express.js on the backend.",
  "Secure JWT-based authentication allows users to register and log in with hashed passwords.",
  "Role-based access control ensures separate dashboard experiences for customers and admins.",
  "Customers can manage their orders and profiles; admins can perform full CRUD operations on users, products, and orders.",
  "Users can search and filter bikes by brand, category, model, price range, and availability.",
  "Each product displays key details along with 'View Details' and 'Buy Now' options linking to a secure checkout page.",
  "Integrated with SurjoPay for smooth and reliable payment transactions.",
  "Public routes include homepage, products listing, individual product details, and an about page.",
  "Private routes include the checkout page and user/admin dashboards, accessible only after login.",
  "The system checks stock availability before processing orders and calculates total price dynamically.",
  "Frontend deployed on Netlify; backend deployed on Vercel for optimal performance and uptime.",
  "Environment variables are used to securely manage sensitive data.",
  "Planned future features: wishlist, cart, user reviews and ratings, order tracking, and email notifications for updates."
],
"futurePlans": [
  "Implement a wishlist feature for users to save bikes they are interested in.",
  "Add a shopping cart system to allow users to add multiple bikes before checkout.",
  "Introduce user reviews and rating functionality on individual bike products.",
  "Enable real-time order tracking from checkout to delivery.",
  "Send email notifications for order confirmations, status updates, and promotions."

],
    "tools": [
      "React",
      "TypeScript",
      "Node.js",
      "Express.js",
      "MongoDB",
      "JWT",
      "Redux Toolkit",
      "Tailwind CSS",
      "SurjoPay"
    ]
  },
  {
    "_id": 3,
    "projectName": "Daily Pulse Newspaper",
    "liveLink": "https://assignment-12-cb947.web.app/",
    "clientRepo": "https://github.com/shaikot07/Daily-Pulse-client-side",
    "serverRepo": "https://github.com/shaikot07/Daily-Pulse-server-side",
    "projectImg": "https://res.cloudinary.com/dy0b6hvog/image/upload/v1746032250/S-02_n4kijl.png",
    "projectBanner": "https://res.cloudinary.com/dy0b6hvog/image/upload/v1746032250/S-02_n4kijl.png",
   "projectOverview": [
  "Daily Pulse is a modern news platform built using React for a dynamic and user-friendly frontend experience.",
  "The backend leverages Firebase and Express to ensure efficient server-side operations.",
  "Users can explore a wide variety of news categories and engage with a diverse community of readers.",
  "Registered users can contribute by posting their own articles, fostering a community-driven platform.",
  "Each submitted article is reviewed and approved by an admin team to maintain content quality.",
  "A premium membership option is available, offering exclusive content, early access to breaking news, and an ad-free reading experience.",
  "Daily Pulse is more than just a news siteâ€”it's an interactive community where users contribute and shape the conversation.",
  "Designed to keep users informed and connected with up-to-date, high-quality news content."
],
"futurePlans": [
  "Introduce a personalized news feed based on user reading preferences and history.",
  "Implement advanced search and filtering across all articles and categories.",
  "Enable real-time comment threads and live discussion rooms for breaking news.",
  "Add multi-language support to serve a broader global audience."

],
    "tools": [
      "HTML",
      "CSS",
      "JavaScript",
      "React",
      "Firebase",
      "Express JS"
    ]
  },
  {
    "_id": 4,
    "projectName": "FitnesHome",
    "liveLink": "https://assignment-11-clint-side-8097e.web.app/",
    "clientRepo": "https://github.com/shaikot07/fitness-Home-client-side",
    "serverRepo": "https://github.com/shaikot07/fitness-Home-server-side",
    "projectImg": "https://res.cloudinary.com/dy0b6hvog/image/upload/v1746272592/fitneshome_uddbac.png",
    "projectBanner": "https://res.cloudinary.com/dy0b6hvog/image/upload/v1746272592/fitneshome_uddbac.png",
    "projectOverview": [
  "FitnesHome is a full-stack, responsive web application designed for users to manage and promote their own fitness services.",
  "Users can create, view, update, and delete personalized fitness service listings.",
  "Protected routes ensure only authenticated users can access sensitive pages.",
  "Secure login and authentication are implemented using JSON Web Tokens (JWT).",
  "The home page is optimized for all device sizes, delivering a seamless user experience.",
  "Lottie-react is used to add smooth and engaging animations throughout the interface.",
  "A fully functional contact form, powered by EmailJS, allows real-time user communication.",
  "FitnesHome blends intuitive design with powerful features to support and grow the online fitness community."
],
    "tools": [
      "React",
      "Tailwind CSS",
      "JavaScript",
      "Express.js",
      "Node.js",
      "MongoDB",
      "JWT (JSON Web Token)",
      "Lottie-react",
      "EmailJS",
      "React Router",
      "Private Routes",
      "Responsive Design"
    ]
  },
  {
    "_id": 5,
    "projectName": "My Task Planner ",
    "liveLink": "https://new-task-managment-app.netlify.app/",
    "clientRepo": "https://github.com/shaikot07/my-task-management-clint-side",
    "serverRepo": "https://github.com/shaikot07/my-task-management-server-side-",
    "projectImg": "https://res.cloudinary.com/dy0b6hvog/image/upload/v1746273802/task_vloiq6.png",
    "projectBanner": "https://res.cloudinary.com/dy0b6hvog/image/upload/v1746273802/task_vloiq6.png",
   "projectOverview": [
  "The Task Management App is a responsive and user-friendly application designed to help users efficiently manage their daily tasks.",
  "Users can add, update, and delete tasks through an intuitive and simple interface.",
  "Tasks are organized based on their status or priority for better clarity and focus.",
  "The app supports real-time data updates to reflect changes instantly.",
  "Private routes ensure that only authenticated users can access and manage tasks.",
  "Secure login and authentication are handled via Firebase Authentication.",
  "Comprehensive error handling and user feedback enhance the user experience.",
  "Fully responsive design ensures seamless use across mobile, tablet, and desktop devices."
],
    "tools": [
      "React",
      "Tailwind CSS",
      "JavaScript",
      "Firebase Authentication",
      "React Router",
      "Private Routes",
      "Responsive Design",
      "CRUD Operations",
      "Real-Time UI Updates"
    ]
  },
  {
    "_id": 6,
    "projectName": "CarHub ",
    "liveLink": "https://assignment-10-clint-side.netlify.app/",
    "clientRepo": "https://github.com/shaikot07/car-hub-client-side",
    "serverRepo": "https://github.com/shaikot07/my-task-management-server-side-",
    "projectImg": "https://res.cloudinary.com/dy0b6hvog/image/upload/v1746273113/carhub_vxl58u.png",
    "projectBanner": "https://res.cloudinary.com/dy0b6hvog/image/upload/v1746273113/carhub_vxl58u.png",
    "projectOverview": [
  "CarHub is a responsive web application designed for managing and purchasing cars online.",
  "Secure user authentication is implemented using Firebase, allowing account registration and login via email and password.",
  "Incorrect login attempts are blocked to enhance user account security.",
  "Private routes are used to restrict access to certain pages unless the user is authenticated.",
  "The entire user interface is fully mobile-responsive, ensuring smooth performance across all device types.",
  "Users can browse available cars and add them to their cart for purchase consideration.",
  "Selected products are saved to a MongoDB database to persist user selections.",
  "A dedicated cart page displays all products the user has added, offering a personalized and streamlined shopping experience."
],
    "tools": [
      "React",
      "Tailwind CSS",
      "JavaScript",
      "Firebase Authentication",
      "Express.js",
      "Node.js",
      "MongoDB",
      "React Router",
      "Private Routes",
      "Responsive Design"
    ]
  },
  {
    "_id": 7,
    "projectName": "Event-management ",
    "liveLink": "https://entertainment-management-ph-9.netlify.app/",
    "clientRepo": "https://github.com/shaikot07/Entertainment--Event-management",
    "serverRepo": "https://github.com/shaikot07/Entertainment--Event-management",
    "projectImg": "https://res.cloudinary.com/dy0b6hvog/image/upload/v1746273423/even_aylfem.png",
    "projectBanner": "https://res.cloudinary.com/dy0b6hvog/image/upload/v1746273423/even_aylfem.png",
  "projectOverview": [
  "Fully responsive web application with a clean and modern UI optimized for mobile and tablet devices.",
  "Responsive navigation bar that adjusts seamlessly across different screen sizes.",
  "Dynamically loaded card data for a scalable and interactive user experience.",
  "Private routes ensure that only authenticated users can access protected pages.",
  "Login system includes password verification and displays clear error messages for invalid credentials.",
  "Designed with a strong focus on user experience and security.",
  "Combines responsive design with authentication logic to deliver a robust frontend experience."
],
    "tools": [
      "React",
      "Tailwind CSS",
      "JavaScript",
      "Firebase Authentication",
      "React Router",
      "Private Routes",
      "Responsive Design",
      "Dynamic Data Loading",
      "Form Validation & Error Handling"
    ]
  }
]